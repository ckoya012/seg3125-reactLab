{"ast":null,"code":"var _jsxFileName = \"/Users/charitakoya/Documents/GitHub/seg3125-reactLab/app_v1/src/components/DatePicker.js\";\nimport React, { useState } from \"react\";\nimport { Paper, Button } from \"@material-ui/core\";\nimport { useStaticState, ClockView, Calendar } from \"@material-ui/pickers\";\n\nfunction StaticPickers() {\n  const [value, handleDateChange] = useState(new Date()); // you can past mostly all available props, like minDate, maxDate, autoOk and so on\n\n  const {\n    pickerProps,\n    wrapperProps\n  } = useStaticState({\n    value,\n    onChange: handleDateChange\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, Object.assign({}, pickerProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    onClick: wrapperProps.onClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Clear date (\", value && value.toJSON(), \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ClockView // or just directly use components\n  , {\n    type: \"hours\",\n    date: value,\n    ampm: false,\n    onMinutesChange: () => {},\n    onSecondsChange: () => {},\n    onHourChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default StaticPickers;","map":{"version":3,"sources":["/Users/charitakoya/Documents/GitHub/seg3125-reactLab/app_v1/src/components/DatePicker.js"],"names":["React","useState","Paper","Button","useStaticState","ClockView","Calendar","StaticPickers","value","handleDateChange","Date","pickerProps","wrapperProps","onChange","overflow","onClear","toJSON","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,sBAApD;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAM,CAACC,KAAD,EAAQC,gBAAR,IAA4BR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAA1C,CADuB,CAGvB;;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCR,cAAc,CAAC;AACnDI,IAAAA,KADmD;AAEnDK,IAAAA,QAAQ,EAAEJ;AAFyC,GAAD,CAApD;AAKA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,oBAAcH,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,eAKE,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEC,YAAY,CAACG,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeP,KAAK,IAAIA,KAAK,CAACQ,MAAN,EADxB,MALF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW;AAAX;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAER,KAFR;AAGE,IAAA,IAAI,EAAE,KAHR;AAIE,IAAA,eAAe,EAAE,MAAM,CAAE,CAJ3B;AAKE,IAAA,eAAe,EAAE,MAAM,CAAE,CAL3B;AAME,IAAA,YAAY,EAAES,IAAI,IAAIR,gBAAgB,CAACQ,IAAD,CANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAwBD;;AAED,eAAeV,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Paper, Button } from \"@material-ui/core\";\nimport { useStaticState, ClockView, Calendar } from \"@material-ui/pickers\";\n\nfunction StaticPickers() {\n  const [value, handleDateChange] = useState(new Date());\n\n  // you can past mostly all available props, like minDate, maxDate, autoOk and so on\n  const { pickerProps, wrapperProps } = useStaticState({\n    value,\n    onChange: handleDateChange,\n  });\n\n  return (\n    <>\n      <div>\n        <Paper style={{ overflow: \"hidden\" }}>\n          <Calendar {...pickerProps} />\n        </Paper>\n\n        <Button fullWidth onClick={wrapperProps.onClear}>\n          Clear date ({value && value.toJSON()})\n        </Button>\n      </div>\n\n      <div>\n        <ClockView // or just directly use components\n          type=\"hours\"\n          date={value}\n          ampm={false}\n          onMinutesChange={() => {}}\n          onSecondsChange={() => {}}\n          onHourChange={date => handleDateChange(date)}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default StaticPickers;\n"]},"metadata":{},"sourceType":"module"}