{"ast":null,"code":"var _jsxFileName = \"/Users/charitakoya/Documents/GitHub/seg3125-reactLab/app_v1/src/components/SingleRecipe.js\";\nimport React, { Component } from 'react';\nimport * as contentful from 'contentful';\nconst SPACE_ID = 'fb7egqp4t5o4';\nconst ACCESS_TOKEN = 'gTzwtGt5x7av4xXQZQSYo11eWMR166TQwzMSpPE0bVc';\nconst client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN\n});\n\nclass SingleRecipe extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipe: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props;\n\n    if (params.slug) {\n      client.getEntries({\n        content_type: 'recipe',\n        'fields.slug': params.slug\n      }).then(response => {\n        this.setState({\n          recipe: response.items[0]\n        });\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.recipe) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      }, \"Not found\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, console.log(\"SINGLE RECIPE\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.state.article.fields.video));\n  }\n\n}\n\nexport default SingleRecipe;","map":{"version":3,"sources":["/Users/charitakoya/Documents/GitHub/seg3125-reactLab/app_v1/src/components/SingleRecipe.js"],"names":["React","Component","contentful","SPACE_ID","ACCESS_TOKEN","client","createClient","space","accessToken","SingleRecipe","constructor","state","recipe","componentDidMount","params","props","slug","getEntries","content_type","then","response","setState","items","render","console","log","article","fields","video"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,UAAZ,MAA4B,YAA5B;AACA,MAAMC,QAAQ,GAAG,cAAjB;AACA,MAAMC,YAAY,GAAG,6CAArB;AAEA,MAAMC,MAAM,GAAGH,UAAU,CAACI,YAAX,CAAwB;AACnCC,EAAAA,KAAK,EAAEJ,QAD4B;AAEnCK,EAAAA,WAAW,EAAEJ;AAFsB,CAAxB,CAAf;;AAIA,MAAMK,YAAN,SAA2BR,SAA3B,CAAqC;AACjCS,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKC,KAAtB;;AACA,QAAID,MAAM,CAACE,IAAX,EAAiB;AACbX,MAAAA,MAAM,CAACY,UAAP,CAAkB;AACdC,QAAAA,YAAY,EAAE,QADA;AAEd,uBAAeJ,MAAM,CAACE;AAFR,OAAlB,EAGGG,IAHH,CAGSC,QAAD,IAAc;AAClB,aAAKC,QAAL,CAAc;AAACT,UAAAA,MAAM,EAAEQ,QAAQ,CAACE,KAAT,CAAe,CAAf;AAAT,SAAd;AACH,OALD;AAMH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKZ,KAAL,CAAWC,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCY,OAAO,CAACC,GAAR,CAAY,eAAZ,CADD,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKd,KAAL,CAAWe,OAAX,CAAmBC,MAAnB,CAA0BC,KAAhC,CAHJ,CADJ;AAOH;;AA9BgC;;AAkCrC,eAAenB,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as contentful from 'contentful';\nconst SPACE_ID = 'fb7egqp4t5o4';\nconst ACCESS_TOKEN = 'gTzwtGt5x7av4xXQZQSYo11eWMR166TQwzMSpPE0bVc';\n\nconst client = contentful.createClient({\n    space: SPACE_ID,\n    accessToken: ACCESS_TOKEN\n});\nclass SingleRecipe extends Component {\n    constructor() {\n        super()\n        this.state = {recipe: null}\n    }\n\n    componentDidMount() {\n        const {params} = this.props;\n        if (params.slug) {\n            client.getEntries({\n                content_type: 'recipe',\n                'fields.slug': params.slug\n            }).then((response) => {\n                this.setState({recipe: response.items[0]})\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.recipe) {\n            return <h1>Not found</h1>\n        }\n\n        return (\n            <div>\n            {console.log(\"SINGLE RECIPE\")}\n                <h1>Title</h1>\n                <div>{this.state.article.fields.video}</div>\n            </div>\n        )\n    }\n\n}\n\nexport default SingleRecipe;\n\n"]},"metadata":{},"sourceType":"module"}